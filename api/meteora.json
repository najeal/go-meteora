{
    "openapi": "3.0.3",
    "info": {
        "title": "keeper",
        "description": "Keeper backend to index analytic information for liquidity book CLMM",
        "contact": {
            "name": "tian",
            "email": "tian@racoons.dev"
        },
        "license": {
            "name": ""
        },
        "version": "0.1.0"
    },
    "paths": {
        "/info/protocol_metrics": {
            "get": {
                "tags": [
                    "info::route"
                ],
                "description": "",
                "operationId": "get_protocol_metrics",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProtocolMetrics"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/all": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "all",
                "parameters": [
                    {
                        "name": "include_unknown",
                        "in": "query",
                        "description": "Include pool with unverified token. Default true.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PairInfo"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/all_by_groups": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "all_by_groups",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default is 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Default is 50",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "skip_size",
                        "in": "query",
                        "description": "Default is 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pools_to_top",
                        "in": "query",
                        "description": "Pools to be sorted to top",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort_key",
                        "in": "query",
                        "description": "Sort key. Default is Volume.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PairSortKey"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort order. Default is Descending.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/OrderBy"
                        }
                    },
                    {
                        "name": "search_term",
                        "in": "query",
                        "description": "Search term.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_unknown",
                        "in": "query",
                        "description": "Include pool with unverified token. Default true.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllGroupOfPairs"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/all_by_groups_metadata": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "all_by_groups_metadata",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default is 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Default is 50",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "skip_size",
                        "in": "query",
                        "description": "Default is 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pools_to_top",
                        "in": "query",
                        "description": "Pools to be sorted to top",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort_key",
                        "in": "query",
                        "description": "Sort key. Default is Volume.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PairSortKey"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort order. Default is Descending.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/OrderBy"
                        }
                    },
                    {
                        "name": "search_term",
                        "in": "query",
                        "description": "Search term.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_unknown",
                        "in": "query",
                        "description": "Include pool with unverified token. Default true.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllGroupOfPairsMetadata"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/all_with_pagination": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "all_with_pagination",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Default is 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Default is 50",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "skip_size",
                        "in": "query",
                        "description": "Default is 0",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pools_to_top",
                        "in": "query",
                        "description": "Pools to be sorted to top",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sort_key",
                        "in": "query",
                        "description": "Sort key. Default is Volume.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/PairSortKey"
                        }
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Sort order. Default is Descending.",
                        "required": false,
                        "schema": {
                            "$ref": "#/components/schemas/OrderBy"
                        }
                    },
                    {
                        "name": "search_term",
                        "in": "query",
                        "description": "Search term.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_unknown",
                        "in": "query",
                        "description": "Include pool with unverified token. Default true.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AllPairsWithPagination"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/group_pair/{lexical_order_mints}": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "get_single_group_pair",
                "parameters": [
                    {
                        "name": "lexical_order_mints",
                        "in": "path",
                        "description": "Lexical ordered token mints of the pair",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PairInfo"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/{pair_address}": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "get_pair",
                "parameters": [
                    {
                        "name": "pair_address",
                        "in": "path",
                        "description": "Address of the liquidity pair",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PairInfo"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/{pair_address}/analytic/bin_trade_volume": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "get_bin_trade_volume_by_days",
                "parameters": [
                    {
                        "name": "pair_address",
                        "in": "path",
                        "description": "Address of the liquidity pair",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "num_of_days",
                        "in": "query",
                        "description": "Number of days before today. Max 255.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BinTradeVolume"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/pair/{pair_address}/analytic/pair_fee_bps": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "get_pair_fee_bps_by_days",
                "parameters": [
                    {
                        "name": "pair_address",
                        "in": "path",
                        "description": "Address of the liquidity pair",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "num_of_days",
                        "in": "query",
                        "description": "Number of days before today. Max 255.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PairFeeBps"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/{pair_address}/analytic/pair_trade_volume": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "get_pair_daily_trade_volume_by_days",
                "parameters": [
                    {
                        "name": "pair_address",
                        "in": "path",
                        "description": "Address of the liquidity pair",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "num_of_days",
                        "in": "query",
                        "description": "Number of days before today. Max 255.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PairTradeVolume"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/{pair_address}/analytic/pair_tvl": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "get_pair_tvl_by_days",
                "parameters": [
                    {
                        "name": "pair_address",
                        "in": "path",
                        "description": "Address of the liquidity pair",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "num_of_days",
                        "in": "query",
                        "description": "Number of days before today. Max 255.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PairTvlSnapshotByDay"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/{pair_address}/analytic/swap_history": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "get_pair_swap_records",
                "parameters": [
                    {
                        "name": "pair_address",
                        "in": "path",
                        "description": "Address of the liquidity pair",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows_to_take",
                        "in": "query",
                        "description": "Number of records to take. Max 255.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Swap"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/pair/{pair_address}/bin_arrays": {
            "get": {
                "tags": [
                    "pair::route"
                ],
                "description": "",
                "operationId": "get_bin_arrays",
                "parameters": [
                    {
                        "name": "pair_address",
                        "in": "path",
                        "description": "Address of the liquidity pair",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BinArrayCache"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/position/{position_address}": {
            "get": {
                "tags": [
                    "position::route"
                ],
                "description": "",
                "operationId": "get_position",
                "parameters": [
                    {
                        "name": "position_address",
                        "in": "path",
                        "description": "Address of the position",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PositionWithApy"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/position/{position_address}/claim_fees": {
            "get": {
                "tags": [
                    "position::route"
                ],
                "description": "",
                "operationId": "get_claim_fees",
                "parameters": [
                    {
                        "name": "position_address",
                        "in": "path",
                        "description": "Address of the position",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClaimFee"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/position/{position_address}/claim_rewards": {
            "get": {
                "tags": [
                    "position::route"
                ],
                "description": "",
                "operationId": "get_claim_rewards",
                "parameters": [
                    {
                        "name": "position_address",
                        "in": "path",
                        "description": "Address of the position",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClaimReward"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/position/{position_address}/deposits": {
            "get": {
                "tags": [
                    "position::route"
                ],
                "description": "",
                "operationId": "get_deposits",
                "parameters": [
                    {
                        "name": "position_address",
                        "in": "path",
                        "description": "Address of the position",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepositWithdraw"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/position/{position_address}/snapshots": {
            "get": {
                "tags": [
                    "position::route"
                ],
                "description": "",
                "operationId": "get_recent_n_snapshot",
                "parameters": [
                    {
                        "name": "position_address",
                        "in": "path",
                        "description": "Address of the position",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows_to_take",
                        "in": "query",
                        "description": "Number of records to take. Max 255.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PositionSnapshot"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": true
            }
        },
        "/position/{position_address}/withdraws": {
            "get": {
                "tags": [
                    "position::route"
                ],
                "description": "",
                "operationId": "get_withdraws",
                "parameters": [
                    {
                        "name": "position_address",
                        "in": "path",
                        "description": "Address of the position",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DepositWithdraw"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/position_v2/{position_address}": {
            "get": {
                "tags": [
                    "position::route"
                ],
                "description": "",
                "operationId": "get_position_v2",
                "parameters": [
                    {
                        "name": "position_address",
                        "in": "path",
                        "description": "Address of the position",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Position"
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/wallet/{wallet_address}/{pair_address}/earning": {
            "get": {
                "tags": [
                    "wallet::route"
                ],
                "description": "",
                "operationId": "get_wallet_earning",
                "parameters": [
                    {
                        "name": "wallet_address",
                        "in": "path",
                        "description": "Address of the wallet",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pair_address",
                        "in": "path",
                        "description": "Address of the pair",
                        "required": true,
                        "deprecated": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WalletEarning"
                                    }
                                }
                            }
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "components": {
        "schemas": {
            "AllGroupOfPairs": {
                "type": "object",
                "required": [
                    "groups",
                    "total"
                ],
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PairGroup"
                        }
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            },
            "AllGroupOfPairsMetadata": {
                "type": "object",
                "required": [
                    "metadatas",
                    "total"
                ],
                "properties": {
                    "metadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PairGroupMetadata"
                        }
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            },
            "AllPairsWithPagination": {
                "type": "object",
                "required": [
                    "pairs",
                    "total"
                ],
                "properties": {
                    "pairs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PairInfo"
                        }
                    },
                    "total": {
                        "type": "integer"
                    }
                }
            },
            "BinArrayCache": {
                "type": "object",
                "required": [
                    "address",
                    "index",
                    "bins"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the bin array"
                    },
                    "bins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BinCache"
                        }
                    },
                    "index": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Index of the bin array"
                    }
                }
            },
            "BinCache": {
                "type": "object",
                "required": [
                    "amount_x",
                    "amount_y",
                    "price",
                    "liquidity_supply",
                    "reward_per_token_stored",
                    "fee_amount_x_per_token_stored",
                    "fee_amount_y_per_token_stored",
                    "amount_x_in",
                    "amount_y_in"
                ],
                "properties": {
                    "amount_x": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token X in the bin. This already excluded protocol fees."
                    },
                    "amount_x_in": {
                        "type": "integer",
                        "description": "Total token X swap into the bin. Only used for tracking purpose."
                    },
                    "amount_y": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token Y in the bin. This already excluded protocol fees."
                    },
                    "amount_y_in": {
                        "type": "integer",
                        "description": "Total token Y swap into he bin. Only used for tracking purpose."
                    },
                    "fee_amount_x_per_token_stored": {
                        "type": "integer",
                        "description": "Swap fee amount of token X per liquidity deposited."
                    },
                    "fee_amount_y_per_token_stored": {
                        "type": "integer",
                        "description": "Swap fee amount of token Y per liquidity deposited."
                    },
                    "liquidity_supply": {
                        "type": "integer",
                        "description": "Liquidities of the bin. This is the same as LP mint supply."
                    },
                    "price": {
                        "type": "integer",
                        "description": "Bin price"
                    },
                    "reward_per_token_stored": {
                        "type": "integer",
                        "description": "reward_a_per_token_stored"
                    }
                }
            },
            "BinTradeVolume": {
                "type": "object",
                "required": [
                    "bin_id",
                    "total_amount_y",
                    "total_amount_x",
                    "total_amount_usd"
                ],
                "properties": {
                    "bin_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "ID of the bin"
                    },
                    "total_amount_usd": {
                        "type": "number",
                        "format": "float",
                        "description": "Total USD value swapped."
                    },
                    "total_amount_x": {
                        "type": "string",
                        "description": "Total token X swapped.",
                        "example": "0"
                    },
                    "total_amount_y": {
                        "type": "string",
                        "description": "Total token Y swapped.",
                        "example": "0"
                    }
                }
            },
            "ClaimFee": {
                "type": "object",
                "required": [
                    "tx_id",
                    "position_address",
                    "pair_address",
                    "token_x_amount",
                    "token_y_amount",
                    "token_x_usd_amount",
                    "token_y_usd_amount",
                    "onchain_timestamp"
                ],
                "properties": {
                    "onchain_timestamp": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Timestamp of the activity"
                    },
                    "pair_address": {
                        "type": "string",
                        "description": "Address of the liquidity pair for the position"
                    },
                    "position_address": {
                        "type": "string",
                        "description": "Address of the position"
                    },
                    "token_x_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token X"
                    },
                    "token_x_usd_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of token X in USD"
                    },
                    "token_y_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token Y"
                    },
                    "token_y_usd_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of token Y in USD"
                    },
                    "tx_id": {
                        "type": "string",
                        "description": "Transaction hash"
                    }
                }
            },
            "ClaimReward": {
                "type": "object",
                "required": [
                    "tx_id",
                    "position_address",
                    "pair_address",
                    "reward_mint_address",
                    "token_amount",
                    "token_usd_amount",
                    "onchain_timestamp"
                ],
                "properties": {
                    "onchain_timestamp": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Timestamp of the activity"
                    },
                    "pair_address": {
                        "type": "string",
                        "description": "Address of the liquidity pair for the position"
                    },
                    "position_address": {
                        "type": "string",
                        "description": "Address of the position"
                    },
                    "reward_mint_address": {
                        "type": "string",
                        "description": "Address of the farm reward claimed"
                    },
                    "token_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of reward token claimed"
                    },
                    "token_usd_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of reward token claimed in USD"
                    },
                    "tx_id": {
                        "type": "string",
                        "description": "Transaction hash"
                    }
                }
            },
            "DepositWithdraw": {
                "type": "object",
                "required": [
                    "tx_id",
                    "position_address",
                    "pair_address",
                    "active_bin_id",
                    "token_x_amount",
                    "token_y_amount",
                    "price",
                    "token_x_usd_amount",
                    "token_y_usd_amount",
                    "onchain_timestamp"
                ],
                "properties": {
                    "active_bin_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Active bin ID"
                    },
                    "onchain_timestamp": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Timestamp of the activity"
                    },
                    "pair_address": {
                        "type": "string",
                        "description": "Address of the liquidity pair for the position"
                    },
                    "position_address": {
                        "type": "string",
                        "description": "Address of the position"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "description": "Liquidity pair price"
                    },
                    "token_x_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token X"
                    },
                    "token_x_usd_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of token X in USD"
                    },
                    "token_y_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token Y"
                    },
                    "token_y_usd_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of token Y in USD"
                    },
                    "tx_id": {
                        "type": "string",
                        "description": "Transaction hash"
                    }
                }
            },
            "OrderBy": {
                "type": "string",
                "enum": [
                    "asc",
                    "desc"
                ]
            },
            "PairFeeBps": {
                "type": "object",
                "required": [
                    "pair_address",
                    "min_fee_bps",
                    "max_fee_bps",
                    "average_fee_bps",
                    "hour_date"
                ],
                "properties": {
                    "average_fee_bps": {
                        "type": "number",
                        "format": "float",
                        "description": "Average fee charged in BPS"
                    },
                    "hour_date": {
                        "type": "string",
                        "description": "Date with hour information",
                        "example": "2023-10-17T15:00:00"
                    },
                    "max_fee_bps": {
                        "type": "number",
                        "format": "float",
                        "description": "Maximum fee charged in BPS"
                    },
                    "min_fee_bps": {
                        "type": "number",
                        "format": "float",
                        "description": "Minimum fee charged in BPS"
                    },
                    "pair_address": {
                        "type": "string",
                        "description": "Address of the liquidity pair"
                    }
                }
            },
            "PairGroup": {
                "type": "object",
                "required": [
                    "name",
                    "pairs"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "pairs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PairInfo"
                        }
                    }
                }
            },
            "PairGroupMetadata": {
                "type": "object",
                "required": [
                    "name",
                    "lexical_order_mints",
                    "total_trade_volume",
                    "total_tvl",
                    "min_fee_tvl_ratio",
                    "max_fee_tvl_ratio",
                    "min_lm_apr",
                    "max_lm_apr"
                ],
                "properties": {
                    "lexical_order_mints": {
                        "type": "string"
                    },
                    "max_fee_tvl_ratio": {
                        "type": "number",
                        "format": "float"
                    },
                    "max_lm_apr": {
                        "type": "number",
                        "format": "float"
                    },
                    "min_fee_tvl_ratio": {
                        "type": "number",
                        "format": "float"
                    },
                    "min_lm_apr": {
                        "type": "number",
                        "format": "float"
                    },
                    "name": {
                        "type": "string"
                    },
                    "total_trade_volume": {
                        "type": "number",
                        "format": "float"
                    },
                    "total_tvl": {
                        "type": "number",
                        "format": "float"
                    }
                }
            },
            "PairInfo": {
                "type": "object",
                "required": [
                    "address",
                    "name",
                    "mint_x",
                    "mint_y",
                    "reserve_x",
                    "reserve_y",
                    "reserve_x_amount",
                    "reserve_y_amount",
                    "bin_step",
                    "base_fee_percentage",
                    "max_fee_percentage",
                    "protocol_fee_percentage",
                    "liquidity",
                    "reward_mint_x",
                    "reward_mint_y",
                    "fees_24h",
                    "today_fees",
                    "trade_volume_24h",
                    "cumulative_trade_volume",
                    "cumulative_fee_volume",
                    "current_price",
                    "apr",
                    "apy",
                    "farm_apr",
                    "farm_apy",
                    "hide"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the liquidity pair"
                    },
                    "apr": {
                        "type": "number",
                        "format": "float",
                        "description": "24 hour APR"
                    },
                    "apy": {
                        "type": "number",
                        "format": "float",
                        "description": "24 hour APY"
                    },
                    "base_fee_percentage": {
                        "type": "string",
                        "description": "Base fee rate"
                    },
                    "bin_step": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Bin step"
                    },
                    "cumulative_fee_volume": {
                        "type": "string",
                        "description": "Cumulative fee volume"
                    },
                    "cumulative_trade_volume": {
                        "type": "string",
                        "description": "Cumulative trading volume"
                    },
                    "current_price": {
                        "type": "number",
                        "format": "float",
                        "description": "Price of the liquidity pair"
                    },
                    "farm_apr": {
                        "type": "number",
                        "format": "float",
                        "description": "Farm reward apr"
                    },
                    "farm_apy": {
                        "type": "number",
                        "format": "float",
                        "description": "Farm reward apy"
                    },
                    "fees_24h": {
                        "type": "number",
                        "format": "float",
                        "description": "Trading fees earned in the last 24 hours"
                    },
                    "hide": {
                        "type": "boolean",
                        "description": "Flag to indicate whether the pair should be shown in the UI"
                    },
                    "liquidity": {
                        "type": "string",
                        "description": "Total liquidity the liquidity pair holding. Also known as Total Value Locked"
                    },
                    "max_fee_percentage": {
                        "type": "string",
                        "description": "Maximum fee rate"
                    },
                    "mint_x": {
                        "type": "string",
                        "description": "Address of token X mint of the liquidity pair"
                    },
                    "mint_y": {
                        "type": "string",
                        "description": "Address of token Y mint of the liquidity pair"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the liquidity pair"
                    },
                    "protocol_fee_percentage": {
                        "type": "string",
                        "description": "Protocol fee rate. A cut from trade fee."
                    },
                    "reserve_x": {
                        "type": "string",
                        "description": "Address of token X reserve of the liquidity pair"
                    },
                    "reserve_x_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Token X amount the liquidity pair hold"
                    },
                    "reserve_y": {
                        "type": "string",
                        "description": "Address of token Y reserve of the liquidity pair"
                    },
                    "reserve_y_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Token Y amount the liquidity pair hold"
                    },
                    "reward_mint_x": {
                        "type": "string",
                        "description": "Address of the farming reward X of the liquidity pair"
                    },
                    "reward_mint_y": {
                        "type": "string",
                        "description": "Address of the farming reward Y of the liquidity pair"
                    },
                    "today_fees": {
                        "type": "number",
                        "format": "float",
                        "description": "Trading fees earned since the beginning of the day"
                    },
                    "trade_volume_24h": {
                        "type": "number",
                        "format": "float",
                        "description": "Trading volume in the last 24 hours"
                    }
                }
            },
            "PairSortKey": {
                "type": "string",
                "enum": [
                    "tvl",
                    "volume",
                    "feetvlratio",
                    "lm"
                ]
            },
            "PairTradeVolume": {
                "type": "object",
                "required": [
                    "pair_address",
                    "trade_volume",
                    "fee_volume",
                    "protocol_fee_volume",
                    "day_date"
                ],
                "properties": {
                    "day_date": {
                        "type": "string",
                        "description": "Date with only day information",
                        "example": "2023-10-17"
                    },
                    "fee_volume": {
                        "type": "number",
                        "format": "float",
                        "description": "Total fee in USD"
                    },
                    "pair_address": {
                        "type": "string",
                        "description": "Address of the liquidity pair"
                    },
                    "protocol_fee_volume": {
                        "type": "number",
                        "format": "float",
                        "description": "Total protocol fee in USD"
                    },
                    "trade_volume": {
                        "type": "number",
                        "format": "float",
                        "description": "Total trading volume in USD"
                    }
                }
            },
            "PairTvlSnapshotByDay": {
                "type": "object",
                "required": [
                    "pair_address",
                    "total_value_locked",
                    "day_date"
                ],
                "properties": {
                    "day_date": {
                        "type": "string",
                        "description": "Date with only day information",
                        "example": "2023-10-17"
                    },
                    "pair_address": {
                        "type": "string",
                        "description": "Address of the liquidity pair"
                    },
                    "total_value_locked": {
                        "type": "number",
                        "format": "float",
                        "description": "Total value locked"
                    }
                }
            },
            "Position": {
                "type": "object",
                "required": [
                    "address",
                    "pair_address",
                    "owner",
                    "total_fee_x_claimed",
                    "total_fee_y_claimed",
                    "total_reward_x_claimed",
                    "total_reward_y_claimed",
                    "total_fee_usd_claimed",
                    "total_reward_usd_claimed",
                    "created_at"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the position"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "Created at utc timestamp",
                        "example": "2024-04-26T04:36:28.766258Z"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Address of the position owner"
                    },
                    "pair_address": {
                        "type": "string",
                        "description": "Address of the liquidity pair for the position"
                    },
                    "total_fee_usd_claimed": {
                        "type": "number",
                        "format": "float",
                        "description": "Total fee has been claimed in USD"
                    },
                    "total_fee_x_claimed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total fee X has been claimed"
                    },
                    "total_fee_y_claimed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total fee Y has been claimed"
                    },
                    "total_reward_usd_claimed": {
                        "type": "number",
                        "format": "float",
                        "description": "Total farm reward has been claimed in USD"
                    },
                    "total_reward_x_claimed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total farm reward X has been claimed"
                    },
                    "total_reward_y_claimed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total farm reward Y has been claimed"
                    }
                }
            },
            "PositionSnapshot": {
                "type": "object",
                "required": [
                    "id",
                    "position_address",
                    "token_x_amount",
                    "token_y_amount",
                    "token_x_usd_rate",
                    "token_y_usd_rate",
                    "pending_fee_x_amount",
                    "pending_fee_y_amount",
                    "cumulative_fee_x_amount",
                    "cumulative_fee_y_amount",
                    "pending_reward_x_amount",
                    "pending_reward_y_amount",
                    "reward_x_usd_rate",
                    "reward_y_usd_rate",
                    "cumulative_reward_x_amount",
                    "cumulative_reward_y_amount",
                    "created_at"
                ],
                "properties": {
                    "created_at": {
                        "type": "string",
                        "description": "Created at",
                        "example": "0"
                    },
                    "cumulative_fee_x_amount": {
                        "type": "string",
                        "description": "Accumulated fee X amount during the snapshot. This includes pending claimable fee.",
                        "example": "0"
                    },
                    "cumulative_fee_y_amount": {
                        "type": "string",
                        "description": "Accumulated fee Y amount during the snapshot. This includes pending claimable fee.",
                        "example": "0"
                    },
                    "cumulative_reward_x_amount": {
                        "type": "string",
                        "description": "Accumulated reward X amount during the snapshot. This includes pending claimable reward.",
                        "example": "0"
                    },
                    "cumulative_reward_y_amount": {
                        "type": "string",
                        "description": "Accumulated reward Y amount during the snapshot. This includes pending claimable reward.",
                        "example": "0"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "ID"
                    },
                    "pending_fee_x_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of pending claimable fee X during the snapshot"
                    },
                    "pending_fee_y_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of pending claimable fee Y during the snapshot"
                    },
                    "pending_reward_x_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of pending claimable reward X during the snapshot"
                    },
                    "pending_reward_y_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of pending claimable reward Y during the snapshot"
                    },
                    "position_address": {
                        "type": "string",
                        "description": "Address of the position"
                    },
                    "reward_x_usd_rate": {
                        "type": "number",
                        "format": "float",
                        "description": "Reward X usd rate during the snapshot"
                    },
                    "reward_y_usd_rate": {
                        "type": "number",
                        "format": "float",
                        "description": "Reward Y usd rate during the snapshot"
                    },
                    "token_x_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token X the position is holding during the snapshot"
                    },
                    "token_x_usd_rate": {
                        "type": "number",
                        "format": "float",
                        "description": "Token X usd rate during the snapshot"
                    },
                    "token_y_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token Y the position is holding during the snapshot"
                    },
                    "token_y_usd_rate": {
                        "type": "number",
                        "format": "float",
                        "description": "Token Y usd rate during the snapshot"
                    }
                }
            },
            "PositionWithApy": {
                "type": "object",
                "required": [
                    "address",
                    "pair_address",
                    "owner",
                    "total_fee_x_claimed",
                    "total_fee_y_claimed",
                    "total_reward_x_claimed",
                    "total_reward_y_claimed",
                    "total_fee_usd_claimed",
                    "total_reward_usd_claimed",
                    "fee_apy_24h",
                    "fee_apr_24h",
                    "daily_fee_yield"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the position"
                    },
                    "daily_fee_yield": {
                        "type": "number",
                        "format": "float"
                    },
                    "fee_apr_24h": {
                        "type": "number",
                        "format": "float"
                    },
                    "fee_apy_24h": {
                        "type": "number",
                        "format": "float"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Address of the position owner"
                    },
                    "pair_address": {
                        "type": "string",
                        "description": "Address of the liquidity pair for the position"
                    },
                    "total_fee_usd_claimed": {
                        "type": "number",
                        "format": "float",
                        "description": "Total fee has been claimed in USD"
                    },
                    "total_fee_x_claimed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total fee X has been claimed"
                    },
                    "total_fee_y_claimed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total fee Y has been claimed"
                    },
                    "total_reward_usd_claimed": {
                        "type": "number",
                        "format": "float",
                        "description": "Total farm reward has been claimed in USD"
                    },
                    "total_reward_x_claimed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total farm reward X has been claimed"
                    },
                    "total_reward_y_claimed": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total farm reward Y has been claimed"
                    }
                }
            },
            "ProtocolMetrics": {
                "type": "object",
                "required": [
                    "total_tvl",
                    "daily_trade_volume",
                    "total_trade_volume",
                    "daily_fee",
                    "total_fee"
                ],
                "properties": {
                    "daily_fee": {
                        "type": "number",
                        "format": "float",
                        "description": "Daily trading fee"
                    },
                    "daily_trade_volume": {
                        "type": "number",
                        "format": "float",
                        "description": "Daily trading volume"
                    },
                    "total_fee": {
                        "type": "number",
                        "format": "float",
                        "description": "Total trading fee"
                    },
                    "total_trade_volume": {
                        "type": "number",
                        "format": "float",
                        "description": "Total trading volume"
                    },
                    "total_tvl": {
                        "type": "number",
                        "format": "float",
                        "description": "Total value locked"
                    }
                }
            },
            "Swap": {
                "type": "object",
                "required": [
                    "tx_id",
                    "in_amount",
                    "in_amount_usd",
                    "out_amount",
                    "out_amount_usd",
                    "trade_fee",
                    "trade_fee_usd",
                    "protocol_fee",
                    "protocol_fee_usd",
                    "onchain_timestamp",
                    "pair_address",
                    "start_bin_id",
                    "end_bin_id",
                    "bin_count",
                    "fee_bps",
                    "in_token",
                    "out_token"
                ],
                "properties": {
                    "bin_count": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of bin involved"
                    },
                    "end_bin_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Ending bin ID for the swap"
                    },
                    "fee_bps": {
                        "type": "number",
                        "format": "float",
                        "description": "Fee in BPS"
                    },
                    "in_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token swapped in"
                    },
                    "in_amount_usd": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of USD value swapped in"
                    },
                    "in_token": {
                        "type": "string",
                        "description": "Address of the token swapped in"
                    },
                    "onchain_timestamp": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Timestamp of the swap activity"
                    },
                    "out_amount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of token swapped out"
                    },
                    "out_amount_usd": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of USD value swapped out"
                    },
                    "out_token": {
                        "type": "string",
                        "description": "Address of the token swapped out"
                    },
                    "pair_address": {
                        "type": "string",
                        "description": "Address of the liquidity pair"
                    },
                    "protocol_fee": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of protocol fee charged"
                    },
                    "protocol_fee_usd": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of protocol fee charged in USD"
                    },
                    "start_bin_id": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Starting bin ID for the swap"
                    },
                    "trade_fee": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Amount of fee charged"
                    },
                    "trade_fee_usd": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of fee charged in USD"
                    },
                    "tx_id": {
                        "type": "string",
                        "description": "Transaction hash"
                    }
                }
            },
            "WalletEarning": {
                "type": "object",
                "properties": {
                    "total_fee_usd_claimed": {
                        "type": "number",
                        "format": "float",
                        "description": "Total fee amount has been claimed by the wallet in USD"
                    },
                    "total_fee_x_claimed": {
                        "type": "string",
                        "description": "Total fee x has been claimed by the wallet",
                        "example": "0"
                    },
                    "total_fee_y_claimed": {
                        "type": "string",
                        "description": "Total fee y has been claimed by the wallet",
                        "example": "0"
                    },
                    "total_reward_usd_claimed": {
                        "type": "number",
                        "format": "float",
                        "description": "Total farm reward amount has been claimed by the wallet in USD"
                    },
                    "total_reward_x_claimed": {
                        "type": "string",
                        "description": "Total reward x has been claimed by the wallet",
                        "example": "0"
                    },
                    "total_reward_y_claimed": {
                        "type": "string",
                        "description": "Total reward y has been claimed by the wallet",
                        "example": "0"
                    }
                }
            }
        }
    }
}